{"ast":null,"code":"import _objectSpread from\"D:/Bank-mgmt-system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import axios from\"axios\";import{setAlert}from'./alert';import{PROFILES_LOADED,PROFILES_ERROR,HISTORY_LOADED,HISTORY_ERROR,TRANSFER_SUCCESS,TRANSFER_ERROR,ADD_CUSTOMER,ADD_CUSTOMER_ERROR}from\"./types\";export const loadProfile=()=>async dispatch=>{try{const res=await axios.get('/api/allUsers');dispatch({type:PROFILES_LOADED,payload:res.data});}catch(error){dispatch({type:PROFILES_ERROR,payload:{msg:error,status:error.response.status}});}};export const loadHistory=()=>async dispatch=>{try{const res=await axios.get('/api/history');dispatch({type:HISTORY_LOADED,payload:res.data});}catch(error){dispatch({type:HISTORY_ERROR,payload:{msg:error,status:error.response.status}});}};export const transfer=(_ref,history)=>{let{From,To,amount}=_ref;return async dispatch=>{const config={headers:{'Content-Type':'application/json'}};const body=JSON.stringify({From,To,amount});try{const res=await axios.post('/api/transaction',body,config);dispatch({type:TRANSFER_SUCCESS,payload:res.data});history.push('/profile');alert(\"\".concat(res.data));}catch(error){dispatch({type:TRANSFER_ERROR,payload:{msg:error.response.statusText,status:error.response.status}});}};};// Add new customer\nexport const addCustomer=formData=>async dispatch=>{try{const config={headers:{'Content-Type':'application/json'}};console.log('Sending customer data:',formData);// formData already has the correct field names (name, email, acc_balance)\nconst customerData=_objectSpread(_objectSpread({},formData),{},{acc_no:String(Math.floor(Math.random()*9000000000)+1000000000),profession:'NA'});const res=await axios.post('/api/users',customerData,config);console.log('Server response:',res.data);dispatch({type:ADD_CUSTOMER,payload:res.data});dispatch(setAlert('Customer added successfully','success'));// Reload profiles after adding new customer\ndispatch(loadProfile());}catch(err){var _err$response,_err$response2,_err$response2$data;console.error('Error in addCustomer action:',(_err$response=err.response)===null||_err$response===void 0?void 0:_err$response.data);const errors=(_err$response2=err.response)===null||_err$response2===void 0?void 0:(_err$response2$data=_err$response2.data)===null||_err$response2$data===void 0?void 0:_err$response2$data.errors;if(errors){errors.forEach(error=>dispatch(setAlert(error.msg,'danger')));}else{dispatch(setAlert('Error adding customer','danger'));}dispatch({type:ADD_CUSTOMER_ERROR});}};","map":{"version":3,"names":["axios","setAlert","PROFILES_LOADED","PROFILES_ERROR","HISTORY_LOADED","HISTORY_ERROR","TRANSFER_SUCCESS","TRANSFER_ERROR","ADD_CUSTOMER","ADD_CUSTOMER_ERROR","loadProfile","dispatch","res","get","type","payload","data","error","msg","status","response","loadHistory","transfer","_ref","history","From","To","amount","config","headers","body","JSON","stringify","post","push","alert","concat","statusText","addCustomer","formData","console","log","customerData","_objectSpread","acc_no","String","Math","floor","random","profession","err","_err$response","_err$response2","_err$response2$data","errors","forEach"],"sources":["D:/Bank-mgmt-system/src/actions/profile.js"],"sourcesContent":["import axios from \"axios\";\nimport { setAlert } from './alert';\nimport { PROFILES_LOADED, PROFILES_ERROR, HISTORY_LOADED, HISTORY_ERROR, TRANSFER_SUCCESS, TRANSFER_ERROR, ADD_CUSTOMER, ADD_CUSTOMER_ERROR } from \"./types\";\n\nexport const loadProfile = () => async dispatch => {\n    try{\n        const res = await axios.get('/api/allUsers')\n        dispatch({\n            type: PROFILES_LOADED,\n            payload: res.data\n        })\n    }catch(error){\n        dispatch({\n            type: PROFILES_ERROR,\n            payload: { msg: error, status: error.response.status }\n        })\n    }\n}\n\nexport const loadHistory = () => async dispatch => {\n    try{\n        const res = await axios.get('/api/history')\n        dispatch({\n            type: HISTORY_LOADED,\n            payload: res.data\n        })\n    }catch(error){\n        dispatch({\n            type: HISTORY_ERROR,\n            payload: { msg: error, status: error.response.status }\n        })\n    }\n}\n\nexport const transfer = ({From, To, amount}, history) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n    const body = JSON.stringify({From, To, amount})\n    try{\n        const res = await axios.post('/api/transaction', body, config)\n        dispatch({\n            type: TRANSFER_SUCCESS,\n            payload: res.data\n        })\n        history.push('/profile')\n        alert(`${res.data}`)\n    }catch(error){\n        dispatch({\n            type: TRANSFER_ERROR,\n            payload: { msg: error.response.statusText, status: error.response.status }\n        })\n    }\n\n}\n\n// Add new customer\nexport const addCustomer = (formData) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    console.log('Sending customer data:', formData);\n\n    // formData already has the correct field names (name, email, acc_balance)\n    const customerData = {\n      ...formData,\n      acc_no: String(Math.floor(Math.random() * 9000000000) + 1000000000),\n      profession: 'NA'\n    };\n\n    const res = await axios.post('/api/users', customerData, config);\n    console.log('Server response:', res.data);\n\n    dispatch({\n      type: ADD_CUSTOMER,\n      payload: res.data\n    });\n\n    dispatch(setAlert('Customer added successfully', 'success'));\n    // Reload profiles after adding new customer\n    dispatch(loadProfile());\n  } catch (err) {\n    console.error('Error in addCustomer action:', err.response?.data);\n    \n    const errors = err.response?.data?.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    } else {\n      dispatch(setAlert('Error adding customer', 'danger'));\n    }\n\n    dispatch({\n      type: ADD_CUSTOMER_ERROR\n    });\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}